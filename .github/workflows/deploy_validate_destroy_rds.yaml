#########################################################
##                                                     ##
##                  CREATE SERVICE                     ##
##                                                     ##
#########################################################

name: deploy_validate_destroy_rds

on:
  push:
    branches:
      - dev  # Adjust this to your main branch name

env:
  WRITEDIRECTORY: '${{ github.workspace }}/privateer/output'
  CONFIG: '${{ github.workspace }}/privateer/config.yaml'
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_KEY_SECRET }}
  MASTER_USERNAME: ${{ secrets.MASTER_USERNAME }}
  MASTER_USER_PASSWORD: ${{ secrets.MASTER_USER_PASSWORD }}
  AWS_PRIMARY_REGION: 'us-east-2b'
  INSTANCE_ID: 'CFI-validator-db'
  DB_NAME: 'test_db'

jobs:
  deploy:
    name: deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install Ansible and botocore
      run: |
        python -m pip install --upgrade pip
        pip install ansible
        pip install boto3 botocore

    - name: Run Ansible playbook      
      run: ansible-playbook -e "aws_access_key=$AWS_ACCESS_KEY_ID aws_secret_key=$AWS_SECRET_ACCESS_KEY master_username=$MASTER_USERNAME master_user_password=$MASTER_USER_PASSWORD db_name=$DB_NAME db_id=$INSTANCE_ID db_aws_region=$AWS_PRIMARY_REGION" ansible/create-rds-db.yaml
      
  
#########################################################
##                                                     ##
##                VALIDATE SERVICE                     ##
##                                                     ##
#########################################################


  validate:
    name: validate
    needs: deploy
    runs-on: ubuntu-latest
    continue-on-error: true

    # We don't currently have a working installer for privateer and its raids, so building from source for now
    # TODO: get config from GitHub Secrets
    steps:
      - name: Fetch and Build Privateer
        run: |
          git clone --branch v0.0.1 --depth 1 https://github.com/privateerproj/privateer privateer-core
          cd privateer-core
          go build
          mkdir -p ${{ github.workspace }}/privateer/bin
          mv privateer ${{ github.workspace }}/privateer/bin/privateer
      
      - name: Fetch and Build RDS Raid
        run: |
          git clone --depth 1 https://github.com/krumIO/raid-rds
          cd raid-rds
          go build
          mv raid-rds ${{ github.workspace }}/privateer/bin/rds
          mv example-config.yml ${{ env.CONFIG }}
        working-directory: ${{ github.workspace }}

      - name: Update config vars
        run: |
          sed -i 's^WriteDirectory: .*$^WriteDirectory: ${{ env.WRITEDIRECTORY }}^' ${{ env.CONFIG }}
          sed -i 's^aws_access_key: .*$^aws_access_key: ${{ env.AWS_ACCESS_KEY_ID }}^' ${{ env.CONFIG }}
          sed -i 's^aws_secret_key: .*$^aws_secret_key: ${{ env.AWS_SECRET_ACCESS_KEY }}^' ${{ env.CONFIG }}
          sed -i 's^aws_region: .*$^aws_region: ${{ env.AWS_PRIMARY_REGION }}^' ${{ env.CONFIG }}
          sed -i 's^primary_region: .*$^primary_region: ${{ env.AWS_PRIMARY_REGION }}^' ${{ env.CONFIG }}
          sed -i 's^instance_identifier: .*$^instance_identifier: ${{ env.INSTANCE_ID }}^' ${{ env.CONFIG }}

      - name: Run privateer with an empty config, expecting failure
        run: ${{ github.workspace }}/privateer/bin/privateer sally rds --config ${{ env.CONFIG }}

      - name: Archive validation results
        uses: actions/upload-artifact@v3
        with:
          name: privateer-output
          path: privateer


#########################################################
##                                                     ##
##                  DESTROY SERVICE                    ##
##                                                     ##
#########################################################
  # Disabling while actively devving
  # destroy:
  #   name: destroy
  #   needs: validate
  #   runs-on: ubuntu-latest

  #   steps:

  #     - name: Checkout code
  #       uses: actions/checkout@v2
    
  #     - name: Set up Python
  #       uses: actions/setup-python@v2
  #       with:
  #         python-version: 3.8  # Use the desired Python version

  #     - name: Install Ansible and botocore
  #       run: |
  #         python -m pip install --upgrade pip
  #         pip install ansible
  #         pip install boto3 botocore

  #     - name: Run Ansible playbook
  #       run: ansible-playbook -e "aws_access_key=$AWS_ACCESS_KEY_ID aws_secret_key=$AWS_SECRET_ACCESS_KEY" ansible/delete-rds-db.yaml
